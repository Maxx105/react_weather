{"version":3,"sources":["components/Header/index.js","utils/API.js","Context/WeatherContext.js","components/Search/index.js","components/Weather/index.js","App.js","index.js"],"names":["Header","id","locationType","location","APIKey","axios","get","then","res","data","lat","lon","ip","WeatherContext","createContext","children","useState","weatherData","setWeatherData","forecastDailyWeatherData","setForecastDailyWeatherData","forecastHourlyWeatherData","setForecastHourlyWeatherData","uvi","setUvi","currentCity","setCurrentCity","currentLocationType","setCurrentLocationType","isLoaded","setIsLoaded","Provider","value","process","Search","setLocationType","setLocation","searchHistory","setSearchHistory","weatherContext","useContext","onLocationTypeChange","e","target","getWeather","API","document","getElementById","coord","console","log","current","daily","hourly","catch","err","createSearchHistory","APICallURL","innerText","searchArray","push","APICall","localStorage","setItem","JSON","stringify","checked","parse","getItem","createErrorMessage","newSpan","createElement","newIcon","className","append","prepend","deleteSearchItem","splicedArray","splice","useEffect","onClick","type","name","htmlFor","onChange","onLocationChange","placeholder","preventDefault","city","map","index","length","clear","Weather","uvIndex","temp","convertToFahrenheit","toFixed","convertDTtoDate","dt","Date","getMonth","getDate","getFullYear","sys","country","date","day","month","year","getCurrentDate","src","weather","icon","alt","description","main","humidity","wind","speed","hour","toLocaleTimeString","hour12","feels_like","pop","getDay","max","min","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.d1699516.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <h1 id=\"header\">Weather</h1>\r\n    );\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nexport default {\r\n  getCurrentWeather: function(locationType, location, APIKey) {\r\n    return axios.get(`https://api.openweathermap.org/data/2.5/weather?${locationType}=${location}&appid=${APIKey}`)\r\n    .then(res => res.data);\r\n  },\r\n  getCurrentWeatherWithURL: function(url) {\r\n    return axios.get(url)\r\n    .then(res => res.data);\r\n  },\r\n  getOneCallData: function(lat, lon, APIKey) {\r\n    return axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely&appid=${APIKey}`)\r\n    .then(res => res.data);\r\n  },\r\n  getZipbyLocation: function (ip) {\r\n    return axios.get(\"https://freegeoip.app/json/\" + ip)\r\n    .then(res => res.data);\r\n  },\r\n  getMyIP: function () {\r\n    return axios.get(\"https://api.ipify.org/?format=json\")\r\n    .then(res => res.data);\r\n  }\r\n};","import React, { createContext, useState } from \"react\";\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n  const [forecastDailyWeatherData, setForecastDailyWeatherData] = useState([]);\r\n  const [forecastHourlyWeatherData, setForecastHourlyWeatherData] = useState([]);\r\n  const [uvi, setUvi] = useState('');\r\n  const [currentCity, setCurrentCity] = useState('');\r\n  const [currentLocationType, setCurrentLocationType] = useState('');\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  let APIKey = process.env.REACT_APP_APIKey;\r\n\r\n  return (\r\n    <div>\r\n        <WeatherContext.Provider value={{\r\n            weatherData,\r\n            setWeatherData,\r\n            uvi,\r\n            setUvi,\r\n            forecastDailyWeatherData,\r\n            setForecastDailyWeatherData,\r\n            forecastHourlyWeatherData,\r\n            setForecastHourlyWeatherData,\r\n            currentCity, \r\n            setCurrentCity,\r\n            currentLocationType, \r\n            setCurrentLocationType,\r\n            isLoaded,\r\n            setIsLoaded,\r\n            APIKey\r\n        }}>\r\n          {children}\r\n        </WeatherContext.Provider>\r\n\r\n  </div>\r\n  );\r\n};","import React, {useState, useEffect, useContext} from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { WeatherContext } from \"../../Context/WeatherContext\";\r\nimport \"./style.css\";\r\n\r\nfunction Search() {\r\n    const [locationType, setLocationType] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [searchHistory, setSearchHistory] = useState([]);\r\n\r\n    const weatherContext = useContext(WeatherContext);\r\n\r\n    useEffect(() => {\r\n        setInitialLocalStorageArray();\r\n    }, []);\r\n\r\n    function onLocationTypeChange(e) {\r\n        setLocationType(e.target.id);\r\n    }\r\n\r\n    function onLocationChange(e) {\r\n        setLocation(e.target.value);\r\n    }\r\n\r\n    function getWeather(locationType, location, APIKey) {\r\n        API.getCurrentWeather(locationType, location, APIKey)\r\n            .then(res => {\r\n                document.getElementById('location').value = \"\";\r\n                setLocation(\"\");\r\n                weatherContext.setWeatherData(res);\r\n                weatherContext.setIsLoaded(true);\r\n                API.getOneCallData(res.coord.lat, res.coord.lon, weatherContext.APIKey)\r\n                    .then(res => {\r\n                        console.log(res)\r\n                        weatherContext.setUvi(res.current.uvi);\r\n                        weatherContext.setForecastDailyWeatherData(res.daily);\r\n                        weatherContext.setForecastHourlyWeatherData(res.hourly);\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    function loadWeather() {\r\n        if (document.getElementById('zip').checked === false && document.getElementById('q').checked === false) {\r\n            document.getElementById('error').innerText = \" Please select a location type\";\r\n            createErrorMessage()\r\n        } else if (document.getElementById('location').value === \"\") {\r\n            document.getElementById('error').innerText = \" Please enter a location\";\r\n            createErrorMessage()\r\n        } else {\r\n            document.getElementById('error').innerText = \"\";\r\n            createSearchHistory(`https://api.openweathermap.org/data/2.5/weather?${locationType}=${location}&appid=${weatherContext.APIKey}`, document.getElementById('location').value, locationType);\r\n            getWeather(locationType, location, weatherContext.APIKey);\r\n        }\r\n    }\r\n\r\n    function setInitialLocalStorageArray() {\r\n        if (JSON.parse(localStorage.getItem('search')) === null) {\r\n            setSearchHistory([]);\r\n        } else {\r\n            setSearchHistory(JSON.parse(localStorage.getItem('search')));\r\n        };\r\n    }\r\n\r\n    function createSearchHistory(APICallURL, location, locationType) {\r\n        document.getElementById('error').innerText = \"\";\r\n        let searchArray = searchHistory;\r\n        searchArray.push({location: location, locationType: locationType, APICall: APICallURL});\r\n        localStorage.setItem('currentCity', location);\r\n        localStorage.setItem('search', JSON.stringify(searchArray));\r\n        setLocalStorageLocationType();\r\n        setSearchHistory(JSON.parse(localStorage.getItem('search')));\r\n        weatherContext.setCurrentCity(localStorage.getItem('currentCity'));\r\n        weatherContext.setCurrentLocationType(localStorage.getItem('currentLocationType'));\r\n    }\r\n\r\n    function setLocalStorageLocationType() {\r\n        if (document.getElementById('zip').checked === true) {\r\n            localStorage.setItem('currentLocationType', 'zip');\r\n        } else localStorage.setItem('currentLocationType', 'q');\r\n    }\r\n\r\n    function createErrorMessage() {\r\n        const newSpan = document.createElement(\"span\");\r\n        const newIcon = document.createElement(\"i\");\r\n        newIcon.className = \"fas fa-exclamation-triangle\";\r\n        newSpan.append(newIcon);\r\n        document.getElementById('error').prepend(newSpan);\r\n    }\r\n\r\n    function clearSearchHistory(e) {\r\n        localStorage.clear();\r\n        setSearchHistory([]);\r\n    }\r\n\r\n    function deleteSearchItem(e) {\r\n        let splicedArray = searchHistory;\r\n        splicedArray.splice(e.target.id, 1);\r\n        localStorage.setItem('search', JSON.stringify(splicedArray));\r\n        setSearchHistory(JSON.parse(localStorage.getItem('search')));\r\n    }\r\n\r\n    function getWeatherForMyLocation(e) {\r\n        e.preventDefault();\r\n        API.getMyIP()\r\n        .then(res => {\r\n            API.getZipbyLocation(res.ip)\r\n                .then (res => {\r\n                    createSearchHistory(`https://api.openweathermap.org/data/2.5/weather?q=${res.city}&appid=${weatherContext.APIKey}`, res.city, 'q');\r\n                    getWeather('q', res.city, weatherContext.APIKey);\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchArea\">\r\n            <form id=\"search-form\">\r\n                <div className=\"form-check\">\r\n                    <input onClick={e => onLocationTypeChange(e)} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"zip\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"zip\">\r\n                        Zip\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <input onClick={e => onLocationTypeChange(e)} className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"q\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"city\">\r\n                        City Name\r\n                    </label>\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <input onChange={e => onLocationChange(e)} type=\"text\" className=\"form-control\" placeholder=\"Enter City Here\" id=\"location\"/>\r\n                    <button onClick = {loadWeather} className=\"btn btn-primary\" type=\"button\">Search</button>\r\n                </div>\r\n                <p id=\"error\"></p>\r\n                <div className=\"d-grid gap-2\">\r\n                    <button onClick={getWeatherForMyLocation} className=\"btn btn-dark\">Search My Location</button>\r\n                </div>\r\n            </form>\r\n            <br/>\r\n            <ul className=\"list-group\">\r\n                {searchHistory.map((location, index) => (\r\n                    <li onClick = {() => getWeather(location.locationType, location.location, weatherContext.APIKey)} className=\"list-group-item d-flex justify-content-between align-items-center\" id=\"searches\" key={index}>\r\n                        {location.location}\r\n                        <button onClick = {deleteSearchItem} className=\"btn btn-dark rounded-pill\" id={index}>X</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {searchHistory.length !== 0 ? (\r\n                <div className=\"d-grid gap-2\">\r\n                    <button onClick={clearSearchHistory} className=\"btn btn-danger\" type=\"button\" id=\"delete-history\">Clear History</button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useContext } from \"react\";\r\nimport { WeatherContext } from \"../../Context/WeatherContext\";\r\nimport \"./style.css\";\r\n\r\nfunction Weather() {\r\n    const weatherContext = useContext(WeatherContext);\r\n\r\n    function getCurrentDate() {\r\n        var date = new Date();\r\n        var day = date.getDate();\r\n        var month = date.getMonth();\r\n        var year = date.getFullYear();\r\n        return (`${month+1}/${day}/${year}`);\r\n    }\r\n\r\n    function convertToFahrenheit(temp) {\r\n        return ((((temp - 273.15)*9)/5)+32).toFixed(1)\r\n    }\r\n\r\n    function getTempIcon(temp) {\r\n        if (temp <= 30) {\r\n            return \"thermometer-empty\";\r\n        } else if (temp > 30 && temp <= 55) {\r\n            return \"thermometer-quarter\";\r\n        } else if (temp > 55 && temp <= 70) {\r\n            return \"thermometer-half\";\r\n        } else if (temp > 70 && temp <= 85) {\r\n            return \"thermometer-three-quarters\";\r\n        } else if (temp > 85 ) {\r\n            return \"thermometer-full\";\r\n        }\r\n    }\r\n\r\n    function setUVColor(uvIndex) {\r\n        if (uvIndex <= 2) {\r\n            return 'success';\r\n        } else if (uvIndex > 2 && uvIndex <=5) {\r\n            return 'warning';\r\n        } else if (uvIndex > 5 && uvIndex <=8) {\r\n            return 'danger';\r\n        } else if (uvIndex > 8) {\r\n            return 'purple';\r\n        }\r\n    }\r\n\r\n    function convertDTtoDate(dt) {\r\n        return (new Date(dt*1000).getMonth() + 1) + \"/\" + (new Date(dt*1000).getDate()) + \"/\" + (new Date(dt*1000).getFullYear())\r\n    }\r\n\r\n    function convertDTtoDay(dt) {\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return days[new Date(dt*1000).getDay()];\r\n    }\r\n\r\n    function convertDTtoTime(dt) {\r\n        return new Date(dt*1000).toLocaleTimeString('en-US', { hour: 'numeric', hour12: true });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {weatherContext.isLoaded ? (\r\n                <div className = \"weather-info\">\r\n                    <div>\r\n                        <h1 id=\"city-name\">{weatherContext.weatherData.name}, {weatherContext.weatherData.sys.country} ({getCurrentDate()})\r\n                        <img id=\"icon\" src={`https://openweathermap.org/img/wn/${weatherContext.weatherData.weather[0].icon}@2x.png`} alt = {weatherContext.weatherData.weather[0].description}></img>\r\n                        </h1>\r\n                    </div>\r\n                    <h4><strong>Temperature <i className={`fas fa-${getTempIcon(convertToFahrenheit(weatherContext.weatherData.main.temp))}`}></i></strong> {convertToFahrenheit(weatherContext.weatherData.main.temp)}°F</h4>\r\n                    <h4><strong>Humidity <i className=\"fas fa-humidity\"></i></strong> {weatherContext.weatherData.main.humidity}%</h4>\r\n                    <h4><strong>Wind Speed <i className=\"fas fa-wind\"></i></strong> {weatherContext.weatherData.wind.speed} mph</h4>\r\n                    <h4><strong>UV Index <i className=\"fas fa-sun\"></i></strong><span id=\"uv-index\" className={`badge rounded-pill bg-${setUVColor(weatherContext.uvi)}`}>{weatherContext.uvi}</span></h4>\r\n                    <hr/>\r\n                    <div className = \"scrolling-wrapper\">\r\n                        {weatherContext.forecastHourlyWeatherData.map((hour, index) => (\r\n                            <div className = \"card\" key={index}>\r\n                                <div className = \"card-body\">\r\n                                    <div><h5 className = \"card-text\"><strong>{convertDTtoTime(hour.dt)}</strong></h5></div>\r\n                                    {/* <div><h6 className = \"card-text\">{convertDTtoDate(day.dt)}</h6></div> */}\r\n                                    <div><img className=\"card-img-top\" id=\"icon\" src={`https://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`} alt = {hour.weather[0].description}></img></div>\r\n                                    <div><p className = \"card-text\">Temperature: {convertToFahrenheit(hour.temp)} °F</p></div>\r\n                                    <div><p className = \"card-text\">Feels Like: {convertToFahrenheit(hour.feels_like)} °F</p></div>\r\n                                    <div><p className = \"card-text\">Humidity: {hour.humidity}%</p></div>\r\n                                    <div><p className = \"card-text\">Chance of Precipitation: {(hour.pop*100).toFixed(0)}%</p></div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr/>\r\n                    <div className = \"scrolling-wrapper\">\r\n                        {weatherContext.forecastDailyWeatherData.map((day, index) => (\r\n                            <div className = \"card\" key={index}>\r\n                                <div className = \"card-body\">\r\n                                    <div><h5 className = \"card-text\"><strong>{convertDTtoDay(day.dt)}</strong></h5></div>\r\n                                    <div><h6 className = \"card-text\">{convertDTtoDate(day.dt)}</h6></div>\r\n                                    <div><img className=\"card-img-top\" id=\"icon\" src={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`} alt = {day.weather[0].description}></img></div>\r\n                                    <div><p className = \"card-text\">H: {convertToFahrenheit(day.temp.max)} °F</p></div>\r\n                                    <div><p className = \"card-text\">L: {convertToFahrenheit(day.temp.min)} °F</p></div>\r\n                                    <div><p className = \"card-text\">Humidity: {day.humidity}%</p></div>\r\n                                    <div><p className = \"card-text\">Chance of Precipitation: {(day.pop*100).toFixed(0)}%</p></div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )\r\n            : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Weather from \"./components/Weather\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"row\">\n        <div className=\"col-lg-4 col-md-12\">\n          <Search/>\n        </div>\n        <br/>\n        <div className=\"col-lg-8 col-md-12\">\n          <Weather/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport WeatherProvider from \"./Context/WeatherContext\";\nimport './index.css';\n\nReactDOM.render(\n  <WeatherProvider>\n    <App/>\n  </WeatherProvider>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}